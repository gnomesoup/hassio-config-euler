input_select:
  daisy_status:
    name: "Daisy's Status"
    options:
      - Home
      - Away
      - Asleep

input_boolean:
  daisy_walked:
    name: "Daisy Walked"
  daisy_outside:
    name: "Daisy might be outside"

input_datetime:
  daisy_log_updated:
    name: "Daisy's Log Updated"
    icon: mdi:dog
    has_date: true
    has_time: true

automation:
  - alias: Daisy mark awake on motion
    # When Daisy is marked "asleep" set her to home if there is motion in Camille's bedroom
    trigger:
      - platform: state
        entity_id: input_select.camille_status
        from: "Asleep"
        to: "Home"
    condition:
      - condition: state
        entity_id: input_select.daisy_status
        state: "Asleep"
      - condition: time
        after: "06:00:00"
        before: "11:00:00"
    action:
      - service: script.daisy_goodmorning

  - alias: Daisy needs to go outside
    # If "Daisy Walked" is not on, remind us every 5 minutes to take her out
    trigger:
      - platform: time_pattern
        minutes: "/1"
    condition:
      - condition: state
        entity_id: input_boolean.daisy_walked
        state: "off"
      - condition: template
        value_template: >-
          {{ states.input_select.daisy_state != "Away" }}
      - condition: template
        value_template: >-
          {{ ((as_timestamp(utcnow()) - as_timestamp(states.input_boolean.daisy_walked.last_changed)) / 60) > 1 and
             (((as_timestamp(utcnow()) - as_timestamp(states.input_boolean.daisy_walked.last_changed))/60)|int) % 5 == 0 }}
    action:
      - service: tts.google_translate_say
        data:
          entity_id:
            - media_player.living_room_display
            - media_player.camille_s_speaker
          message: "Take Daisy outside"
      - service: notify.mobile_app_ergisch
        data:
          title: "Daisy Alert"
          message: "Daisy needs to go!"

  - alias: Daisy time to feed
    # Send a notification that Daisy needs dinner
    trigger: 
      - platform: time
        at: "17:00:00"
    condition:
      - condition: template
        value_template: >-
          {{ states.input_select.daisy_state != "Away" }}
    action:
      - service: tts.google_translate_say
        data:
          entity_id:
            - media_player.living_room_display
            - media_player.camille_s_speaker
          message: "Time to feed Daisy"
      - service: notify.mobile_app_ergisch
        data:
          title: "Time to feed Daisy"
          message: "Click to fill log"
          data:
            url: "https://docs.google.com/forms/d/e/1FAIpQLSdc1HbpBndlpDK7QokvjB7k6AlDmGeQFAsS1K6cpBP2d-dHwg/viewform?usp=sf_link"
      - service: script.daisy_go_outside_delay

  - alias: Daisy time to train
    # Send notification that it is time to train daisy
    trigger: 
      - platform: time
        at: "15:00:00"
    condition:
      - condition: template
        value_template: >-
          {{ states.input_select.daisy_state != "Away" }}
    action:
      - service: tts.google_translate_say
        data:
          entity_id:
            - media_player.living_room_display
            - media_player.camille_s_speaker
          message: "Time to train Daisy"
      - service: notify.mobile_app_ergisch
        data:
          title: "Time to train Daisy"
          message: "Click to fill log"
          data:
            url: "https://docs.google.com/forms/d/e/1FAIpQLSdc1HbpBndlpDK7QokvjB7k6AlDmGeQFAsS1K6cpBP2d-dHwg/viewform?usp=sf_link"

  - alias: Daisy actions on door open
    # turn off "Daisy Walked" when the door opens
    # if the script "daisy go outside delay" is running, turn it off
    trigger:
      - platform: state
        entity_id: binary_sensor.door_sensor_2
        from: "off"
        to: "on"
    condition:
      - condition: template
        value_template: >-
          {{ states.input_select.daisy_state != "Away" }}
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.daisy_walked
      - service: script.turn_off
        entity_id: script.daisy_go_outside_delay

  - alias: Daisy mark outside
    # If the front door is opened and daisy is not outside mark her as being outside
    # TODO Can this be merged with the above script?
    trigger:
      - platform: state
        entity_id: binary_sensor.door_sensor_2
        from: "off"
        to: "on"
    condition:
      - condition: state
        entity_id: input_select.daisy_status
        state: "Home"
      - condition: state
        entity_id: input_boolean.daisy_outside
        state: "off"
    action:
      - service: homeassistant.turn_on
        data:
          entity_id: input_boolean.daisy_outside 

  - alias: Daisy mark inside by time
    # If the door doesn't reopen after 15 minutes, assume daisy wasn't going outside
    trigger:
      - platform: state
        entity_id: input_boolean.daisy_outside
        to: "on"
        for:
          minutes: 15
    condition:
      - condition: state
        entity_id: input_select.daisy_status
        state: "Home"
      - condition: state
        entity_id: input_boolean.daisy_outside
        state: "on"
    action:
      - service: homeassistant.turn_off
        data:
          entity_id: input_boolean.daisy_outside 

  - alias: Daisy mark inside by door
    # If Daisy is marked outside, and the door opens again after at least 2 minutes.
    # Prompt us for logging of activities
    trigger:
      - platform: state
        entity_id: binary_sensor.door_sensor_2
        to: "on"
    condition:
      - condition: state
        entity_id: input_select.daisy_status
        state: "Home"
      - condition: state
        entity_id: input_boolean.daisy_outside
        state: "on"
        for:
          minutes: 2
    action:
      - service: homeassistant.turn_off
        data:
          entity_id: input_boolean.daisy_outside 
      - service: notify.mobile_app_michaels_ipad
        data:
          title: "Daisy Alert"
          message: "Click to fill log"
      - service: notify.mobile_app_ergisch
        data:
          title: "Daisy Alert"
          message: "Front door opened. Click to fill log"
          data:
            url: "https://docs.google.com/forms/d/e/1FAIpQLSdc1HbpBndlpDK7QokvjB7k6AlDmGeQFAsS1K6cpBP2d-dHwg/viewform?usp=sf_link"

  - alias: "Daisy Minimote Camille Hold"
    trigger:
      - platform: state
        entity_id:
          - input_boolean.minimote_camille_2
          - input_boolean.minimote_camille_4
          - input_boolean.minimote_camille_6
          - input_boolean.minimote_camille_8
    action:
      - service: homeassistant.toggle
        data_template:
          entity_id: >-
            {% if is_state("input_select.daisy_status", "Asleep") %}
              {% set runScript = "script.daisy_goodmorning" %}
            {% elif is_state("input_select.daisy_status", "Home") %}
              {% set runScript = "script.daisy_goodnight" %}
            {% else %}
              {% set runScript = "script.placeholder" %}
            {% endif %}
            {{ runScript }}

  - alias: "Daisy log time updater"
    trigger:
      - platform: webhook
        webhook_id: d02bf9a5-7dab-4e9f-9e1b-240b6edde23e 
    action:
      - service: input_datetime.set_datetime
        data_template:
          entity_id: input_datetime.daisy_log_updated
          date: >-
            {{ now().timestamp() | timestamp_custom("%Y-%m-%d", true) }}
          time: >-
            {{ now().timestamp() | timestamp_custom("%H:%M:%S", true) }}
script:
  daisy_goodmorning:
    alias: Good Morning Daisy
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.daisy_status
          option: "Home"
      - service: homeassistant.turn_off
        data:
          entity_id:
            - input_boolean.daisy_walked

  daisy_goodnight:
    alias: Good Night Daisy
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.daisy_status
          option: "Asleep"

  daisy_go_outside_delay:
    alias: Delay after feeding to go outside
    sequence:
      - delay: "03:45:00"
      - service: homeassistant.turn_off
        data:
          entity_id: input_boolean.daisy_walked
